<?php

namespace common\models\oldbk;

use Yii;

/**
 * This is the model class for table "news".
 *
 * @property integer $id
 * @property integer $type
 * @property string $topic
 * @property string $text
 * @property string $date
 * @property integer $parent
 * @property string $author
 * @property string $print_time
 */
class News extends \common\models\BaseModel
{
    public $is_enabled = false;

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'news';
    }

    /**
     * @return \yii\db\Connection the database connection used by this AR class.
     */
    public static function getDb()
    {
        return Yii::$app->get('db_oldbk');
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['type', 'parent'], 'integer'],
            [['topic', 'text', 'date'], 'required'],
            [['text', 'author'], 'string'],
            [['print_time', 'is_enabled'], 'safe'],
            [['topic'], 'string', 'max' => 255],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'type' => 'Type',
            'topic' => 'Название',
            'text' => 'Текст',
            'date' => 'Дата публикации',
            'parent' => 'Parent',
            'author' => 'Author',
            'print_time' => 'Print Time',
            'is_enabled' => 'Включена?',
        ];
    }

    /**
     * @inheritdoc
     * @return \common\models\oldbk\query\NewsQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \common\models\oldbk\query\NewsQuery(get_called_class());
    }

    public function afterFind()
    {
        parent::afterFind(); // TODO: Change the autogenerated stub
        if($this->parent == 1) {
            $this->is_enabled = true;
        }
    }

    public function beforeValidate()
    {
        $r = parent::beforeValidate(); // TODO: Change the autogenerated stub
        if($this->is_enabled) {
            $this->parent = 1;
        } else {
            $this->parent = 0;
        }

        return $r;
    }

    public function isEnable()
    {
        return $this->oldAttributes['parent'] != $this->parent && $this->parent == 1;
    }

    public function isDisable()
    {
        return $this->oldAttributes['parent'] != $this->parent && $this->parent == 0;
    }
}
