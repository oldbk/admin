<?php

namespace common\models\event;

use Yii;
use yii\behaviors\TimestampBehavior;
use yii\helpers\Url;

/**
 * This is the model class for table "event_wc".
 *
 * @property integer $id
 * @property integer $year
 * @property integer $team1_id
 * @property integer $team2_id
 * @property integer $datetime
 * @property integer $team1_res
 * @property integer $team2_res
 * @property integer $who_win
 * @property integer $updated_at
 *
 *
 * @property EventWcTeam $team1
 * @property EventWcTeam $team2
 */
class EventWc extends \common\models\BaseModel
{

	const STATUS_WIN_TEAM1 = 1;
	const STATUS_WIN_TEAM2 = 2;
	const STATUS_WIN_NOWIN = 3;

	const SCENARIO_RESULT = 'wc_result';

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'event_wc';
    }

    /**
     * @inheritdoc
     */
	public function rules()
	{
		return [
			[['team1_id', 'team2_id', 'datetime'], 'required'],
			[['team1_res', 'team2_res', 'who_win'], 'required', 'on' => self::SCENARIO_RESULT],
			[['team1_id', 'team2_id', 'datetime', 'team1_res', 'team2_res', 'who_win', 'updated_at'], 'integer'],
		];
	}

	public function behaviors()
	{
		return [
			[
				'class' => TimestampBehavior::className(),
				'updatedAtAttribute' => 'updated_at',
				'createdAtAttribute' => false,
			],
		];
	}

	/**
	 * @inheritdoc
	 */
	public function attributeLabels()
	{
		return [
			'id' 			=> 'ID',
			'year' 			=> 'Год',
			'team1_id' 		=> 'Команда 1',
			'team2_id' 		=> 'Команда 2',
			'datetime' 		=> 'Время матча',
			'team1_res' 	=> 'Результат "Команда 1"',
			'team2_res' 	=> 'Результат "Команда 2"',
			'who_win' 		=> 'Результат матча',
			'updated_at' 	=> 'Обновлено',
		];
	}

    /**
     * @inheritdoc
     * @return \common\models\query\event\EventWcQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \common\models\query\event\EventWcQuery(get_called_class());
    }

    public function beforeValidate()
	{
		if(is_string($this->datetime)) {
			$this->datetime = (new \DateTime($this->datetime))->getTimestamp();
		}

		return parent::beforeValidate(); // TODO: Change the autogenerated stub
	}

	/**
	 * @return \yii\db\ActiveQuery
	 */
	public function getTeam1()
	{
		return $this->hasOne(EventWcTeam::className(), ['id' => 'team1_id']);
	}

	/**
	 * @return \yii\db\ActiveQuery
	 */
	public function getTeam2()
	{
		return $this->hasOne(EventWcTeam::className(), ['id' => 'team2_id']);
	}

	public static function getWinLabel()
	{
		return [
			self::STATUS_WIN_TEAM1 => 'Команда 1',
			self::STATUS_WIN_TEAM2 => 'Команда 2',
			self::STATUS_WIN_NOWIN => 'Ничья',
		];
	}
}