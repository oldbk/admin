<?php

namespace common\models\validator;

use common\models\validatorItem\BaseValidator;
use common\models\validatorItem\iValidator;
use Yii;
use yii\base\Model;
use yii\behaviors\TimestampBehavior;

/**
 * This is the model class for table "quest_validator_item".
 *
 * @property integer $id
 * @property string $item_type
 * @property integer $parent_id
 * @property string $parent_type
 * @property integer $updated_at
 * @property integer $created_at
 *
 * @property QuestValidatorItemInfo[] $itemInfo
 */
class QuestValidatorItem extends \common\models\BaseModel
{
    const PARENT_TYPE_VALIDATOR_TASK = 'task';
    const PARENT_TYPE_VALIDATOR_REWARD = 'reward';

    /**
     * @var iValidator|Model
     */
    public $info;

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'quest_validator_item';
    }

    public function behaviors()
    {
        return [
            [
                'class' => TimestampBehavior::className(),
                'updatedAtAttribute' => 'updated_at',
                'createdAtAttribute' => 'created_at',
            ],
        ];
    }

    public static function instantiate($row)
    {
        return self::getInstance($row['parent_type']);
    }

    /**
     * @param $parent_type
     * @return QuestValidatorItemTask
     * @throws \Exception
     */
    public static function getInstance($parent_type)
    {
        switch ($parent_type) {
            case self::PARENT_TYPE_VALIDATOR_TASK:
                return new QuestValidatorItemTask();
                break;
            case self::PARENT_TYPE_VALIDATOR_REWARD:
                return new QuestValidatorItemTask();
                break;
        }

        throw new \Exception('Вид списка не найден', 420);
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['updated_at', 'created_at', 'parent_id'], 'integer'],
            [['item_type', 'parent_type'], 'string', 'max' => 255],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'item_id' => 'Item ID',
            'item_type' => 'Item Type',
            'updated_at' => 'Updated At',
            'created_at' => 'Created At',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getItemInfo()
    {
        return $this->hasMany(QuestValidatorItemInfo::className(), ['item_id' => 'id']);
    }

    /**
     * @inheritdoc
     * @return \common\models\query\QuestValidatorItemQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \common\models\query\QuestValidatorItemQuery(get_called_class());
    }

    public function afterFind()
    {
        parent::afterFind(); // TODO: Change the autogenerated stub

        $this->info = BaseValidator::getValidator($this->item_type);
        foreach ($this->itemInfo as $Info) {
            $this->info->{$Info->field} = $Info->value;
        }
    }
}
